name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false  # Continue with other builds even if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: breakout
            asset_name: breakout-linux-amd64
          - os: windows-latest
            artifact_name: breakout.exe
            asset_name: breakout-windows-amd64
          - os: macos-latest
            artifact_name: breakout
            asset_name: breakout-macos-amd64

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build
      run: cargo build --release

    - name: Create release archive
      shell: bash
      run: |
        mkdir -p release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp "target/release/${{ matrix.artifact_name }}" release/
          cp -r res release/
          cd release
          7z a -tzip "../${{ matrix.asset_name }}.zip" ./*
        else
          cp "target/release/${{ matrix.artifact_name }}" release/
          cp -r res release/
          cd release
          zip -r "../${{ matrix.asset_name }}.zip" ./*
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.asset_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

