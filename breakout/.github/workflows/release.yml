name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: breakout
            asset_name: breakout-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: breakout.exe
            asset_name: breakout-windows-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: breakout
            asset_name: breakout-macos-amd64

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Install Linux Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libasound2-dev libudev-dev libx11-dev libxi-dev libgl1-mesa-dev

    - name: Install macOS Dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install pkg-config

    - name: Build
      run: |
        cargo build --release
        chmod +x target/release/${{ matrix.artifact_name }}
      if: matrix.os != 'windows-latest'

    - name: Build Windows
      run: cargo build --release
      if: matrix.os == 'windows-latest'

    - name: Create release archive
      shell: bash
      run: |
        mkdir -p release
        cp "target/release/${{ matrix.artifact_name }}" release/
        cp -r res release/
        cd release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a -tzip "../${{ matrix.asset_name }}.zip" ./*
        else
          zip -r "../${{ matrix.asset_name }}.zip" ./*
        fi

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.asset_name }}.zip
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}





